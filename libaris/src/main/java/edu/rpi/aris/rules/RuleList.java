package edu.rpi.aris.rules;

public enum RuleList {

    REITERATION,
    CONJUNCTION,
    SIMPLIFICATION,
    ADDITION,
    DISJUNCTIVE_SYLLOGISM,
    CONDITIONAL_PROOF,
    MODUS_PONENS,
    PROOF_BY_CONTRADICTION,
    DOUBLENEGATION,
    CONTRADICTION,
    PRINCIPLE_OF_EXPLOSION,
    BICONDITIONAL_INTRO,
    BICONDITIONAL_ELIM,
    EQUIVALENCE_INTRO,
    EQUIVALENCE_ELIM,

    UNIVERSAL_GENERALIZATION,
    UNIVERSAL_INSTANTIATION,
    EXISTENTIAL_GENERALIZATION,
    EXISTENTIAL_INSTANTIATION,

    MODUS_TOLLENS,
    HYPOTHETICAL_SYLLOGISM,
    EXCLUDED_MIDDLE,
    CONSTRUCTIVE_DILEMMA,

    ASSOCIATION,
    COMMUTATION,
    IDEMPOTENCE,
    DE_MORGAN,
    DISTRIBUTION,
    DOUBLENEGATION_EQUIV,
    COMPLEMENT,
    IDENTITY,
    ANNIHILATION,
    INVERSE,
    ABSORPTION,
    REDUCTION,
    ADJACENCY,
    CONDITIONAL_COMPLEMENT,
    CONDITIONAL_IDENTITY,
    CONDITIONAL_ANNIHILATION,
    IMPLICATION,
    BI_IMPLICATION,
    CONTRAPOSITION,
    CURRYING;
    public final String name, simpleName;
    public final Rule rule;

    RuleList() {
        this.rule = Rule.fromRule(this);
        if (rule != null) {
            name = rule.getName();
            simpleName = rule.getSimpleName();
        } else
            name = simpleName = null;
    }

}
